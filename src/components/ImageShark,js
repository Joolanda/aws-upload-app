const AWS = require('aws-sdk');
const sharp = require('sharp');

const s3 = new AWS.S3();

const S3_BUCKET ='sharky-bucket'
const REGION ='us-east-1';
const API_ACCESS = process.env.REACT_APP_ACCESS;
const API_SECRET = process.env.REACT_APP_SECRET;

AWS.config.update({
  accessKeyId: API_ACCESS,
  secretAccessKey: API_SECRET,
  region: REGION,
});

exports.handler = async (event, context) => {
  const bucket = event.Records[0].s3.bucket.name;
  const key = event.Records[0].s3.object.key;

  const params = {
    Bucket: S3_BUCKET,
    Key: key,
    // Key: file.name
  };

  try {
    const data = await s3.getObject(params).promise();
    const resizedImage = await sharp(data.Body)
      .resize(200, 200)
      .toBuffer();

    await s3
      .putObject({
        Bucket: `${bucket}-resized`,
        Key: `resized-${key}`,
        Body: resizedImage,
      })
      .promise();

    return {
      statusCode: 200,
      body: JSON.stringify('Image is resized and uploaded successfully'),
    };
  } catch (err) {
    console.log(err);
    return {
      statusCode: 500,
      body: JSON.stringify('Error resizing and uploading img'),
    };
  }
};
